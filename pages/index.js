import Head from "next/head";
//import Image from "next/image";
import localFont from "next/font/local";
import styles from "@/styles/Home.module.css";
import { useEffect, useRef, useCallback } from "react";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export default function Home() {
  const workerRef = useRef();

  useEffect(() => {
    const documentCE = document.createElement;
    document.createElement = (...args) => {
      const el = documentCE.apply(document, args);
      if (args[0] === 'iframe') {
        el.setAttribute('credentialless', '');
      }
      return el;
    };

    const logHtml = function (cssClass, ...args) {
      const ln = document.createElement('div');
      if (cssClass) ln.classList.add(cssClass);
      ln.append(document.createTextNode(args.join(' ')));
      document.getElementById('sqldump').append(ln);
    };
    
    const worker = new Worker('worker.js?sqlite3.dir=jswasm', {
      credentials: "same-origin" });

    /*
    console.log( "Adding sql-wasm.js script tag")
    const s = document.createElement( 'script' );
    s.setAttribute( 'src', '/worker.js?sqlite3.dir=jswasm' );
    s.setAttribute( 'crossorigin', 'anonymous' );
    document.body.appendChild( s );
  
    window.loadSQL = async () => {
        console.log( "loadSQL function called" )
  
        return await initSqlJs({
            locateFile: file => `/${file}`
          })
    }
    */
    //const worker = new Worker(new URL("worker.js?sqlite3.dir=jswasm", import.meta.url));
    //const worker = new Worker('worker.js?sqlite3.dir=jswasm');

    /*
    const workerUrl = new URL(
      '../public/worker.js?sqlite3.dir=jswasm',
      import.meta.url,
    ).toString();

    const blob = new Blob([`importScripts('${JSON.stringify(workerUrl)}');`]);
    const url = URL.createObjectURL(blob);
    const worker = new Worker(workerUrl);
    */

    workerRef.current = worker;
    workerRef.current.onmessage = function ({ data }) {
        switch (data.type) {
          case 'log':
            logHtml(data.payload.cssClass, ...data.payload.args);
            break;
          default:
            logHtml('error', 'Unhandled message:', data.type);
        }
      };

    return () => {
      workerRef.current?.terminate();
    };
  }, []);

  const handleWork = useCallback(async () => {
    workerRef.current?.postMessage(100000);
  }, []);








  return (
    <>

      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className={`${styles.page} ${geistSans.variable} ${geistMono.variable}`}
      >
        <main className={styles.main}>
        
          <p>Do work in a WebWorker!</p>
          <button onClick={handleWork}>Send msg to worker</button>
          <div id="sqldump"></div>
          <ol>
            <li>
              Get started by editing <code>pages/index.js</code>.
            </li>
            <li>Save and see your changes instantly.</li>
          </ol>

          <div className={styles.ctas}>
            <a
              className={styles.primary}
              href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
            >
              Deploy now
            </a>
            <a
              href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
              className={styles.secondary}
            >
              Read our docs
            </a>
          </div>



        </main>
        <footer className={styles.footer}>
          <a
            href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Learn
          </a>
          <a
            href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Examples
          </a>
          <a
            href="https://nextjs.org?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Go to nextjs.org â†’
          </a>
        </footer>
      </div>
    </>
  );
}
